// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mskcc.Tools.Idp.ConnectionsAggregator.Infrastructure.Data;

#nullable disable

namespace Mskcc.Tools.Idp.ConnectionsAggregator.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250417180144_AddIdentityLinkingQueueAndArchiveTables")]
    partial class AddIdentityLinkingQueueAndArchiveTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.AttributeContractFulfillment", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OidcClientPrimaryKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpConnectionPrimaryKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("OidcClientPrimaryKey");

                    b.HasIndex("SpConnectionPrimaryKey");

                    b.ToTable("IDM_PingID_Attributes_List");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.IdentityLinkingProcessingReqeustArchive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Attempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntraObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProcessedSuccessfully")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastProcessingAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PingOneUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ping_IdentityLinking_Processing_Request_Archive");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.IdentityLinkingProcessingReqeustQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Attempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntraObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProcessedSuccessfully")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastProcessingAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PingOneUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ping_IdentityLinking_Processing_Request_Queue");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.LegacyConnection", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ACSEndpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APMNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionalIssuanceCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpressionIssuanceCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PingConnectionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("IDM_PingID_Connections_List");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.OidcClient", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowAuthenticationApiInit")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "allowAuthenticationApiInit");

                    b.PrimitiveCollection<string>("AuthorizationDetailTypes")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "authorizationDetailTypes");

                    b.Property<bool>("BypassApprovalPage")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "bypassApprovalPage");

                    b.Property<string>("ClientId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "clientId");

                    b.Property<DateTime>("ClientSecretChangedTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "clientSecretChangedTime");

                    b.Property<string>("ClientSecretRetentionPeriodType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "clientSecretRetentionPeriodType");

                    b.Property<string>("ConditionalIssuanceCriteria")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "creationDate");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<string>("DeviceFlowSettingType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "deviceFlowSettingType");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "enabled");

                    b.PrimitiveCollection<string>("ExclusiveScopes")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "exclusiveScopes");

                    b.Property<string>("ExpressionIssuanceCriteria")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("GrantTypes")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "grantTypes");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "modificationDate");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("OidcPolicyId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "allowedCorsOrigins");

                    b.Property<int>("PersistentGrantExpirationTime")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantExpirationTime");

                    b.Property<string>("PersistentGrantExpirationTimeUnit")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantExpirationTimeUnit");

                    b.Property<string>("PersistentGrantExpirationType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantExpirationType");

                    b.Property<int>("PersistentGrantIdleTimeout")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantIdleTimeout");

                    b.Property<string>("PersistentGrantIdleTimeoutTimeUnit")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantIdleTimeoutTimeUnit");

                    b.Property<string>("PersistentGrantIdleTimeoutType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantIdleTimeoutType");

                    b.Property<string>("PersistentGrantReuseType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "persistentGrantReuseType");

                    b.PrimitiveCollection<string>("RedirectUris")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "redirectUris");

                    b.Property<string>("RefreshRolling")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "refreshRolling");

                    b.Property<string>("RefreshTokenRollingGracePeriodType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "refreshTokenRollingGracePeriodType");

                    b.Property<string>("RefreshTokenRollingIntervalType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "refreshTokenRollingIntervalType");

                    b.Property<bool>("RequireDpop")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "requireDpop");

                    b.Property<bool>("RequireJwtSecuredAuthorizationResponseMode")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "requireJwtSecuredAuthorizationResponseMode");

                    b.Property<bool>("RequireProofKeyForCodeExchange")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "requireProofKeyForCodeExchange");

                    b.Property<bool>("RequirePushedAuthorizationRequests")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "requirePushedAuthorizationRequests");

                    b.Property<bool>("RequireSignedRequests")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "requireSignedRequests");

                    b.Property<bool>("RestrictScopes")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "restrictScopes");

                    b.Property<bool>("RestrictToDefaultAccessTokenManager")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "restrictToDefaultAccessTokenManager");

                    b.PrimitiveCollection<string>("RestrictedResponseTypes")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "restrictedResponseTypes");

                    b.PrimitiveCollection<string>("RestrictedScopes")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "restrictedScopes");

                    b.Property<bool>("ValidateUsingAllEligibleAtms")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "validateUsingAllEligibleAtms");

                    b.HasKey("PrimaryKey");

                    b.ToTable("IDM_PingID_OIDC_Information");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.ServiceNowApplication", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiAccountLifeCycleManagement")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "u_api_acct_life_cycle_mgmt");

                    b.Property<string>("ApplicationCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "application_category");

                    b.Property<string>("ApplicationType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "application_type");

                    b.Property<string>("ArchitectureType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "architecture_type");

                    b.Property<string>("AuthenticationProtocols")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "u_authentication_protocols");

                    b.Property<string>("BusinessCriticality")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "business_criticality");

                    b.Property<string>("ContractEndDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "contract_end_date");

                    b.Property<string>("DataClassification")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "data_classification");

                    b.Property<string>("EmergencyTier")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "emergency_tier");

                    b.Property<string>("InstallStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "install_status");

                    b.Property<string>("InstallType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "install_type");

                    b.Property<string>("IsExternallyFacing")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "u_is_externally_facing");

                    b.Property<string>("ItApplicationOwner")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "it_application_owner");

                    b.Property<string>("LifeCycleStageStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "life_cycle_stage_status");

                    b.Property<string>("ManagedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "managed_by_group");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "number");

                    b.Property<string>("OwnedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "owned_by");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "platform");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "short_description");

                    b.Property<string>("SupportGroup")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "support_group");

                    b.Property<string>("SupportedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "supported_by");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.Property<string>("UserBase")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "user_base");

                    b.Property<string>("UsesEnterpriseIdentitiesNetworkId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "u_uses_enterprise_identities_network_id");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "vendor");

                    b.HasKey("PrimaryKey");

                    b.ToTable("APM_ServiceNow_Applications_Info");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.ServiceNowUser", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SysId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("APM_ServiceNow_Users_Info");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.SpConnection", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcsUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BaseUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ConditionalIssuanceCriteria")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactInfoCompany")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactInfoEmail")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactInfoFirstName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactInfoLastName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactInfoNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("EnabledProfiles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExpressionIssuanceCriteria")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IdpInitiatedLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameIdPolicy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Protocol")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("RequireSignedAuthnRequests")
                        .HasMaxLength(500)
                        .HasColumnType("bit");

                    b.Property<bool>("SignAssertions")
                        .HasColumnType("bit");

                    b.Property<bool>("SignResponseAsRequired")
                        .HasMaxLength(500)
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("IDM_PIngID_SAML_Information");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.SpConnectionCertificate", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveVerificationCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptionCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileData")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IssuerDN")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KeyAlgorithm")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KeySize")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryVerificationCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryVerificationCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SignatureAlgorithm")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.PrimitiveCollection<string>("SubjectAlternativeNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectDN")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("X509FileId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("IDM_PingID_Certificates_List");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.AttributeContractFulfillment", b =>
                {
                    b.HasOne("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.OidcClient", null)
                        .WithMany("AttributeContractFulfillment")
                        .HasForeignKey("OidcClientPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.SpConnection", null)
                        .WithMany("AttributeContractFulfillment")
                        .HasForeignKey("SpConnectionPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.OidcClient", b =>
                {
                    b.Navigation("AttributeContractFulfillment");
                });

            modelBuilder.Entity("Mskcc.Tools.Idp.ConnectionsAggregator.Domain.Entities.SpConnection", b =>
                {
                    b.Navigation("AttributeContractFulfillment");
                });
#pragma warning restore 612, 618
        }
    }
}
